## I-DLV executable and options
solver.name=idlv
# Windows executable
# solver.path=executables/idlv_1.1.6_windows_x86-64.exe
# Linux executable
solver.path=executables/idlv_1.1.6_linux_x86-64
solver.options.grounding=--t --no-facts --check-edb-duplication
solver.options.query=--query

# ## DLV executable and options
# solver.name=dlv
# # Windows executable
# solver.path=executables/dlv.mingw.exe
# # Linux executable
# # solver.path=executables/dlv.x86-64-linux-elf-static.bin
# solver.options.grounding=-nofacts
# solver.options.query=-silent -FC

# ## DLV2 executable and options
# solver.name=dlv2
# # Windows executable
# solver.path=executables/dlv2-windows.exe
# # Linux executable
# # solver.path=executables/dlv2-linux
# solver.options.grounding=--t --no-facts --check-edb-duplication
# solver.options.query=--silent --query --mode=idlv

## Execution options
solver.output.to_file=false
solver.full_grounding=true
saturation_only=true
# select the algorithm used for the TGD saturation
# It can be: gsat (default), skolemized_sat, simple_sat
saturation_alg=gsat
debug=true

# timeout in seconds
# timeout=10

# are negative constraints included
negative_constraint=true

# change the way variables are renamed in VNF
sorted_vnf=true

subsumption_method=simple
subsumption_method=tree_atom

# Simple sat filters the full TGDs it generates 
# such that their body always contains at least a predicate 
# appearing in a non full TGDs head
simple_sat_predicate_filter=true

# the following parameters are only available for Gsat algorithm
# they will be ignored by simple sat.
optimization=3
